on:
  workflow_call:
    inputs:
      toolchain:
        type: string
        required: false
        default: nightly
      target:
        type: string
        required: false
        default: aarch64-unknown-linux-gnu

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: ${{ inputs.toolchain }}
          targets: ${{ inputs.target }}
          components: rustfmt, clippy
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings
      - name: Check
        run: |

          ## Find unwanted useage and other compliance things
          cargo deny check
          ## Find outdated dependencies
          # cargo outdated --exit-code 1
          cargo outdated --exit-code 0
          ## Find unused dependencies
          # cargo udeps
          rm -rf ~/.cargo/advisory-db
          ## Find security vulnerabilities in crates reported to RustSec Advisory Database
          cargo audit
          ## Generate a BOM of dependencies containing vulnerabilities
          cargo pants
      - name: Test
        run: cargo test
